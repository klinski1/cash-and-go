services:
  frontend:
    build: ./frontend
    container_name: react_frontend
    restart: always
    ports:
      - "3000:80"
    networks:
      - web_network 

  backend:
    build: ./api
    container_name: python_api
    restart: always
    networks:
      - web_network

  mongo:
    image: mongo:latest
    container_name: mongo_db
    restart: always
    volumes:
      - mongo_data:/data/db
    networks:
      - web_network

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
    entrypoint: ["/bin/sh", "-c", "rm -f /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"]
    depends_on:
      - frontend
      - backend
    networks:
      - web_network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: >
      /bin/sh -c "trap exit TERM; while :; do
      certbot renew --webroot -w /var/www/certbot --quiet;
      sleep 12h & wait \$${!};
      done"
    networks:
      - web_network

networks:
  web_network:
    name: web_network  # <-- Явно задаём имя сети
    driver: bridge


volumes:
  mongo_data:
